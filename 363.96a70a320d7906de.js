"use strict";(self.webpackChunkTradeoff_V2=self.webpackChunkTradeoff_V2||[]).push([[363],{490:(w,u,c)=>{c.d(u,{Z:()=>m});var l=c(861);function h(o,n){let e=o.length-n,d=0;do{for(let t=n;t>0;t--)o[d+n]+=o[d],d++;e-=n}while(e>0)}function g(o,n,e){let d=0,t=o.length;const i=t/e;for(;t>n;){for(let a=n;a>0;--a)o[d+n]+=o[d],++d;t-=n}const r=o.slice();for(let a=0;a<i;++a)for(let s=0;s<e;++s)o[e*a+s]=r[(e-s-1)*i+a]}class m{decode(n,e){var d=this;return(0,l.Z)(function*(){const t=yield d.decodeBlock(e),i=n.Predictor||1;if(1!==i){const r=!n.StripOffsets;return function _(o,n,e,d,t,i){if(!n||1===n)return o;for(let s=0;s<t.length;++s){if(t[s]%8!=0)throw new Error("When decoding with predictor, only multiple of 8 bits are supported.");if(t[s]!==t[0])throw new Error("When decoding with predictor, all samples must have the same size.")}const r=t[0]/8,a=2===i?1:t.length;for(let s=0;s<d&&!(s*a*e*r>=o.byteLength);++s){let f;if(2===n){switch(t[0]){case 8:f=new Uint8Array(o,s*a*e*r,a*e*r);break;case 16:f=new Uint16Array(o,s*a*e*r,a*e*r/2);break;case 32:f=new Uint32Array(o,s*a*e*r,a*e*r/4);break;default:throw new Error(`Predictor 2 not allowed with ${t[0]} bits per sample.`)}h(f,a)}else 3===n&&(f=new Uint8Array(o,s*a*e*r,a*e*r),g(f,a,r))}return o}(t,i,r?n.TileWidth:n.ImageWidth,r?n.TileLength:n.RowsPerStrip||n.ImageLength,n.BitsPerSample,n.PlanarConfiguration)}return t})()}}},363:(w,u,c)=>{c.r(u),c.d(u,{default:()=>g});var l=c(861),h=c(490);class g extends h.Z{constructor(){if(super(),typeof createImageBitmap>"u")throw new Error("Cannot decode WebImage as `createImageBitmap` is not available");if(typeof document>"u"&&typeof OffscreenCanvas>"u")throw new Error("Cannot decode WebImage as neither `document` nor `OffscreenCanvas` is not available")}decode(m,o){return(0,l.Z)(function*(){const n=new Blob([o]),e=yield createImageBitmap(n);let d;typeof document<"u"?(d=document.createElement("canvas"),d.width=e.width,d.height=e.height):d=new OffscreenCanvas(e.width,e.height);const t=d.getContext("2d");return t.drawImage(e,0,0),t.getImageData(0,0,e.width,e.height).data.buffer})()}}}}]);