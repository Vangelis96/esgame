"use strict";(self.webpackChunkTradeoff_V2=self.webpackChunkTradeoff_V2||[]).push([[363],{490:(w,l,c)=>{c.d(l,{Z:()=>m});var h=c(861);function u(o,n){let e=o.length-n,r=0;do{for(let t=n;t>0;t--)o[r+n]+=o[r],r++;e-=n}while(e>0)}function g(o,n,e){let r=0,t=o.length;const i=t/e;for(;t>n;){for(let a=n;a>0;--a)o[r+n]+=o[r],++r;t-=n}const d=o.slice();for(let a=0;a<i;++a)for(let s=0;s<e;++s)o[e*a+s]=d[(e-s-1)*i+a]}class m{decode(n,e){var r=this;return(0,h.Z)(function*(){const t=yield r.decodeBlock(e),i=n.Predictor||1;if(1!==i){const d=!n.StripOffsets;return function _(o,n,e,r,t,i){if(!n||1===n)return o;for(let s=0;s<t.length;++s){if(t[s]%8!=0)throw new Error("When decoding with predictor, only multiple of 8 bits are supported.");if(t[s]!==t[0])throw new Error("When decoding with predictor, all samples must have the same size.")}const d=t[0]/8,a=2===i?1:t.length;for(let s=0;s<r&&!(s*a*e*d>=o.byteLength);++s){let f;if(2===n){switch(t[0]){case 8:f=new Uint8Array(o,s*a*e*d,a*e*d);break;case 16:f=new Uint16Array(o,s*a*e*d,a*e*d/2);break;case 32:f=new Uint32Array(o,s*a*e*d,a*e*d/4);break;default:throw new Error(`Predictor 2 not allowed with ${t[0]} bits per sample.`)}u(f,a)}else 3===n&&(f=new Uint8Array(o,s*a*e*d,a*e*d),g(f,a,d))}return o}(t,i,d?n.TileWidth:n.ImageWidth,d?n.TileLength:n.RowsPerStrip||n.ImageLength,n.BitsPerSample,n.PlanarConfiguration)}return t})()}}},363:(w,l,c)=>{c.r(l),c.d(l,{default:()=>g});var h=c(861),u=c(490);class g extends u.Z{constructor(){if(super(),typeof createImageBitmap>"u")throw new Error("Cannot decode WebImage as `createImageBitmap` is not available");if(typeof document>"u"&&typeof OffscreenCanvas>"u")throw new Error("Cannot decode WebImage as neither `document` nor `OffscreenCanvas` is not available")}decode(m,o){return(0,h.Z)(function*(){const n=new Blob([o]),e=yield createImageBitmap(n);let r;typeof document<"u"?(r=document.createElement("canvas"),r.width=e.width,r.height=e.height):r=new OffscreenCanvas(e.width,e.height);const t=r.getContext("2d");return t.drawImage(e,0,0),t.getImageData(0,0,e.width,e.height).data.buffer})()}}}}]);